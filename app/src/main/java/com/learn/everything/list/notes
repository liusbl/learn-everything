Things to show (show both hard and basic things):

Other optimizations recycledViewPool, stableiD

CONSIDER SEPARATING onCreate+onBind methods from Binder, to make it a true interface

Perform validation to check if all enums are used for list type / also if none are used twice

Figure out how to differentiate between different comments:
    Explanatory comments
    Comments showing changes
    Comments showing deleted/new things
    Other comments?

Add final example with and without comments

This requires a separate object for list (you cannot business object). Is that okay?

Why enum?

Perfor enum validation in Adapter (check if all enum values all used, also if no values are used twice)

Show more concrete use cases for ListDiffer. Examlpes include:
    List expansion

State synchronizatino between list items and data

Extract inflate to separate file

Add comments everywhere

What about viewAttach/viewDetach?

what EXACTLY should go to onCreate method? Provide very concrete examples
    EditText text watchers
    click listeners

Add more comments with each update

Usage of "private inner" things

Accentuate changes and important bits

Show why you shouldn't set click listeners or text watchers in onBind, but rather should use onCreate

Don't forget to write down "false"

Suggestion: extract "inflate" method to separate file

Subtleties about onCreate method

Demonstrate layoutContainer usage

Demonstrate changes between files

tools:listitem=""

usage of inner class

ListDiffer types and usages.
There are many types so therefore there can be confusion

stableId usage

Things you have to remember to do:
- Set layout manager
- inflate with "false" parameter

Difference between
- areItemsTheSame
- areContentsTheSame

Does usage of "lazy" cause a memory leak?

LayoutContainer usage, how to bind views to things

Lists with multiple view holders

Difference between onCreate and onBind with specifici use cases

BE careful when modifying list and setting mutable list,
    it will not work correctly when the same list object is provided
    therefore a list copy is needed.


SHOW:

DiffUtil - Low level class for calculating different between lists
    and dispatching callbacks

ListUpdateCallback - contains possible list modification methods

AsyncListDiffer -

ListAdapter -




interface ItemBinder<T : Any> {
    // Both are open since there are valid cases where neither onCreate and onBind is needed (such as dividers)

    fun onCreate(viewHolder: BinderViewHolder<T>) {
        // Empty
    }

    fun onBind(viewHolder: BinderViewHolder<T>, item: T) {
        // Empty
    }
}



--------------

Operations to demonstrate:

Item remove

Item insert

Item move

Item swap

Item change/update???




-----------

TODO:
Situations where you have to save state (such as checkBox in region select)
Check out SortedAdapter
changePayload
